"""
Django settings for hwr_analyzer project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
from enum import unique, Enum
from .env import ENV
import platform


@unique
class Environment(Enum):
    PROD = 'prod'
    PERF = 'perf'
    STAGING = 'staging'
    DEV = 'development'
    LOCAL = 'local'
    BUILD = 'build'

    @property
    def is_prod(self):
        return self == Environment.PROD

    @property
    def is_staging(self):
        return self == Environment.STAGING

    @property
    def is_dev(self):
        return self == Environment.DEV

    @property
    def is_local(self):
        return self == Environment.LOCAL


APP_ENV = ENV.str('APP_ENV', default='local')
APP_ENVIRONMENT: Environment = Environment(APP_ENV)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MARKDOWN_VIEW_TEMPLATE_USE_HIGHLIGHT_JS = True
MARKDOWN_VIEW_TEMPLATE_USE_TOC = False
MARKDOWN_VIEW_USE_REQUEST_CONTEXT = True
MARKDOWN_VIEW_TEMPLATE = 'markdown.html'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2vm3hwc4*zt_l_j*j0f1kz=*6a8kd(m4+lwez+r=c8e6q^c6vp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ENV.bool('DEBUG', default=True)

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_spectacular',
    'rest_framework',
    'channels',
    'django_celery_beat',
    'services.restful',
    'services.websocket',
    'markdown_view',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'utils.middlewares.ExceptionHandlerMiddleware',
    'rollbar.contrib.django.middleware.RollbarNotifierMiddleware',
]

ROOT_URLCONF = 'hwr_analyzer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./hwr_analyzer'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'hwr_analyzer.asgi.application'

DJANGO_ADMIN_ENABLED = False

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
MONGODB_HOST = ENV.str(
    'MONGODB_HOST',
    default='mongodb://root:password@localhost:27017/?authMechanism=DEFAULT',
)

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'admin',
        'ENFORCE_SCHEMA': False,
        'CLIENT': {
            'host': MONGODB_HOST,
        },
        'LOGGING': {
            'version': 1,
            'loggers': {
                'djongo': {
                    'level': 'DEBUG',
                    'propagate': False,
                },
            },
        },
        'CONN_MAX_AGE': None,
    },
}

ATOMIC_REQUESTS = False

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = '/app/static'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR.parent, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field


AUTHENTICATION_CLASSES = [
    'utils.authentications.SimpleAuthentication',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': AUTHENTICATION_CLASSES,
    'DEFAULT_RENDERER_CLASSES': [
        'djangorestframework_camel_case.render.CamelCaseJSONRenderer',
        'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer',
        # Any other renders
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        # If you use MultiPartFormParser or FormParser, we also have a camel case version
        'djangorestframework_camel_case.parser.CamelCaseFormParser',
        'djangorestframework_camel_case.parser.CamelCaseMultiPartParser',
        'djangorestframework_camel_case.parser.CamelCaseJSONParser',
        # Any other parsers
    ],
    'EXCEPTION_HANDLER': 'utils.exceptions.handlers.custom_exception_handler',
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

ALLOWED_SKIP_AUTHENTICATION = True

CELERY_RECOGNIZER_AWAIT_TIMEOUT = 300


# Configuration for Interactive ink server

IINK_SERVER_URL = ENV.str('IINK_SERVER_URL', default='http://iink-server:8897/api/v4.0/iink/batch')
IINK_SERVER_KEY = ENV.str('IINK_SERVER_KEY', default='01d19d5b-7fe0-4d19-be93-053d42c0164b')

IINK_XDPI = ENV.int('IINK_XDPI', default=90)
IINK_YDPI = ENV.int('IINK_YDPI', default=90)
IINK_WIDTH = ENV.int('IINK_WIDTH', default=890)
IINK_HEIGHT = ENV.int('IINK_HEIGHT', default=1260)

IINK_SCALE = ENV.int('IINK_SCALE', default=10)


# Configuration for Stroke analyzer

ANALYZER_LOCAL_LIB_NAME = 'libmylib.apples.so.1' if platform.platform().startswith('macOS') else 'libmylib.so.1'
ANALYZER_LOCAL_LIB_PATH = f'{str(BASE_DIR.parent)}/domain/analyzer/libs/{ANALYZER_LOCAL_LIB_NAME}'
ANALYZER_PROD_LIB_PATH = '/app/src/hwr_analyzer/domain/analyzer/libs/libmylib.so.1'
ANALYZER_LIB_PATH = ANALYZER_LOCAL_LIB_PATH if DEBUG else ANALYZER_PROD_LIB_PATH

ANALYZER_PAPER_WIDTH = ENV.int('ANALYZER_PAPER_WIDTH', default=211)
ANALYZER_PAPER_HEIGHT = ENV.int('ANALYZER_PAPER_HEIGHT', default=297)
ANALYZER_BLOCK_SIZE_SAMPLING_STEPS = ENV.int('ANALYZER_BLOCK_SIZE_SAMPLING_STEPS', default=3)
ANALYZER_KIND_OF_ENGINE = ENV.int('ANALYZER_KIND_OF_ENGINE', default=0)


# Configuration for NeoLAB Data Platform

NDP_CLIENT_ID = ENV.str('NDP_CLIENT_ID', default='neolab_handwriting_recognition_service')
NDP_CLIENT_SECRET = ENV.str('NDP_CLIENT_SECRET', default='rJvjKalaywMmtw9luBCe5UFJRkfH1a9Y')

NDP_AUTH_BASE_URL = ENV.str('NDP_AUTH_BASE_URL', default='https://ndp-dev.onthe.live:7443')
NDP_USER_BASE_URL = ENV.str('NDP_USER_BASE_URL', default='https://ndp-dev.onthe.live:6443')
NDP_INK_BASE_URL = ENV.str('NDP_INK_BASE_URL', default='https://ndp-dev.onthe.live:9443')

NDP_INSTROSPECT_URI = NDP_AUTH_BASE_URL + '/oauth/v2/introspect'

HWR_API_BASE_URL = ENV.str('HWR_API_BASE_URL', default='https://hwr.neolab.net')

HWR_API_VALID_CONTENT_TYPE_LIST = ENV.list(
    var='HWR_API_VALID_CONTENT_TYPE_LIST',
    cast=str,
    default=['application/vnd.neolab.ndp2.stroke+json'],
)
